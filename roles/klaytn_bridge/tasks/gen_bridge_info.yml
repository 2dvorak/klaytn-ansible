---
- name: "Run command to get parent nodekey"
  shell:
    cmd: "cat {{ klaytn_node_DATA_DIR }}/klay/nodekey"
  register: parent_nodekey_output
  become: yes
  when:
    - remoteNode|bool
    - isParent|bool

- name: "Get parent nodekey"
  set_fact:
    parent_nodekey: "{{ parent_nodekey_output.stdout }}"
  when:
    - remoteNode|bool
    - isParent|bool

- name: "Run KSCN to get parent operator"
  shell:
    cmd: "{{ klaytn_service_type | regex_replace ('d') }} attach --datadir {{ klaytn_node_DATA_DIR }} --exec subbridge.parentOperator"
  register: parent_operator_output
  become: yes
  when:
    - remoteNode|bool
    - not isParent|bool

- name: "Get parent operator"
  set_fact:
    parent_operator: "{{ parent_operator_output.stdout }}"
  when:
    - remoteNode|bool
    - not isParent|bool

- name: "Run command to get child nodekey"
  shell:
    cmd: "cat {{ klaytn_node_DATA_DIR }}/klay/nodekey"
  register: child_nodekey_output
  become: yes
  when:
    - remoteNode|bool
    - not isParent|bool

- name: "Get child nodekey"
  set_fact:
    child_nodekey: "{{ child_nodekey_output.stdout }}"
  when:
    - remoteNode|bool
    - not isParent|bool

- name: "Run KSCN to get child operator"
  shell:
    cmd: "{{ klaytn_service_type | regex_replace ('d') }} attach --datadir {{ klaytn_node_DATA_DIR }} --exec subbridge.childOperator"
  register: child_operator_output
  become: yes
  when:
    - remoteNode|bool
    - not isParent|bool

- name: "Get child operator"
  set_fact:
    child_operator: "{{ child_operator_output.stdout }}"
  when:
    - remoteNode|bool
    - not isParent|bool

- name: "Generate bridge_info.json file"
  template:
    src: "bridge_info.j2"
    dest: "{{ ansible_env.PWD }}/bridge_info{{ item }}.json"
  with_sequence: start=0 count={{ groups['ParentChainNode'] | length }}
  when:
    - not remoteNode|bool

- name: "Restart Klaytn serivce"
  command: /bin/true
  notify:
    - restart klaytn
  when:
    - ansible_facts['pkg_mgr'] == 'yum'
    - remoteNode|bool

- name: "Run Klaytn"
  # Below command is to run Klaytn in background even after the shell opened by ansible is exited.
  command: "nohup /opt/{{ klaytn_service_type }}/bin/{{ klaytn_service_type }} start </dev/null >/dev/null 2>&1 &"
  become: yes
  when:
    - ansible_facts['pkg_mgr'] != 'yum'
    - remoteNode|bool
